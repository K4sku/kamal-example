servers:
  web: # role
    traefik: false
    labels:
      # router name is in the form of <service>-<role>-<destination(environment)>
      traefik.http.routers.kamal-example-web-staging.rule: Host(`staging-kamal-example.cklos.com`)
      traefik.http.routers.kamal-example-web-staging_secure.entrypoints: websecure
      traefik.http.routers.kamal-example-web-staging_secure.rule: Host(`staging-kamal-example.cklos.com`)
      traefik.http.routers.kamal-example-web-staging_secure.tls.certresolver: letsencrypt

env:
  clear:
    HOSTNAME: staging-kamal-example.cklos.com
    DB_HOST: kamal-example-db-staging  # hostname: kamal-multienv
    RAILS_ENV: staging

volumes:
  - "/storage-staging:/rails/storage"

accessories:
  db-staging:
    image: postgres:15
    host: 95.216.199.204  # hostname: kamal-multienv
    env:
      clear:
        POSTGRES_USER: "kamal_example"
        POSTGRES_DB: 'kamal_example_staging'
      secret:
        - POSTGRES_PASSWORD
    files:
      - config/init.sql.staging:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data-staging:/var/lib/postgresql/data
    options:
      network: "kamal"

  redis-staging:
    image: redis:7.2.2
    host: 95.216.199.204  # hostname: kamal-multienv
    cmd: "redis-server --requirepass <%= File.read(File.expand_path('.redis-password.staging', __dir__)) %>"
    directories:
      - data-staging:/data
    options:
      network: "kamal"
