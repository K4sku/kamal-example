service: staging-kamal-example
image: kasku/kamal-example

servers:
  web:
    hosts:
      - 95.216.199.204  # hostname: cklos-kamal-1
    traefik: false
    labels:
      traefik.http.routers.staging-kamal-example-web-staging.rule: Host(`staging-kamal-example.cklos.com`)
      traefik.http.routers.staging-kamal-example-web-staging_secure.entrypoints: websecure
      traefik.http.routers.staging-kamal-example-web-staging_secure.rule: Host(`staging-kamal-example.cklos.com`)
      traefik.http.routers.staging-kamal-example-web-staging_secure.tls.certresolver: letsencrypt

  worker:
    hosts:
      - 95.216.199.204  # hostname: cklos-kamal-1
    cmd: bundle exec sidekiq

env:
  clear:
    HOSTNAME: staging-kamal-example.cklos.com
      - 95.216.199.204  # hostname: cklos-kamal-1
    RAILS_SERVE_STATIC_FILES: true
    RAILS_LOG_TO_STDOUT: true
    RAILS_ENV: staging
  secret:
    - KAMAL_REGISTRY_PASSWORD
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - REDIS_URL

volumes:
  - "/storage-staging:/rails/storage"

registry:
  username: kasku
  password:
    - KAMAL_REGISTRY_PASSWORD

ssh:
  user: webapp

builder:
  multiarch: false

accessories:
  db:
    image: postgres:15
    host: 95.216.199.204  # hostname: cklos-kamal-1
    port: 5433
    env:
      clear:
        POSTGRES_USER: "kamal_example"
        POSTGRES_DB: 'kamal_example_staging'
      secret:
        - POSTGRES_PASSWORD
    files:
      - config/init.sql.staging:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data-staging:/var/lib/postgresql/data

  redis:
    image: redis:7.2.2
    host: 95.216.199.204  # hostname: cklos-kamal-1
    port: 6380
    cmd: "redis-server --requirepass <%= File.read(File.expand_path('.redis-password.staging', __dir__)) %>"
    directories:
      - data-staging:/data
