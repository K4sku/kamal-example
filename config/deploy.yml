# Name of your application. Used to uniquely configure containers.
service: kamal-example

# Name of the container image.
image: kasku/kamal-example

# Deploy to these servers.
servers:
  web:
    hosts:
      - 95.216.199.204  # hostname: cklos-kamal-1
    options:
      network: "kamal"
    labels:
      traefik.http.routers.kamal-example.rule: Host(`kamal-example.cklos.com`)
      traefik.http.routers.kamal-example_secure.entrypoints: websecure
      traefik.http.routers.kamal-example_secure.rule: Host(`kamal-example.cklos.com`)
      traefik.http.routers.kamal-example_secure.tls.certresolver: letsencrypt

  worker:
    hosts:
      - 95.216.199.204  # hostname: cklos-kamal-1
    options:
      network: "kamal"
    cmd: bundle exec sidekiq

env:
  clear:
    HOSTNAME: kamal-example.cklos.com
    DB_HOST: kamal-example-db  # hostname: cklos-kamal-1
    RAILS_SERVE_STATIC_FILES: true
    RAILS_LOG_TO_STDOUT: true
  secret:
    - KAMAL_REGISTRY_PASSWORD
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - REDIS_URL

volumes:
  - "/storage:/rails/storage"

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: kasku

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Use a different ssh user than root
ssh:
  user: webapp

# Configure builder setup.
builder:
  multiarch: false
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15
    host: 95.216.199.204  # hostname: cklos-kamal-1
    options:
      network: "kamal"
    env:
      clear:
        POSTGRES_USER: "kamal_example"
        POSTGRES_DB: 'kamal_example_production'
      secret:
        - POSTGRES_PASSWORD
    files:
      - config/init.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.2
    host: 95.216.199.204  # hostname: cklos-kamal-1
    options:
      network: "kamal"
    cmd: "redis-server --requirepass <%= File.read(File.expand_path('.redis-password', __dir__)) %>"
    directories:
      - data:/data

# Configure custom arguments for Traefik
traefik:
  options:
    network: "kamal"
    publish:
      - "443:443"
    volume:
      - "/letsencrypt:/letsencrypt"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "support@cklos.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
    certificatesResolvers.letsencrypt.acme.caserver: https://acme-staging-v02.api.letsencrypt.org/directory

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
